{"version":3,"sources":["./node_modules/jwt-decode/build/jwt-decode.esm.js","./src/app/account/login/login.component.ts","./src/app/account/login/login.component.html","./src/app/account/account.module.ts","./src/app/account/account-routing.module.ts"],"names":[],"mappings":"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","file":"account-account-module-es2015.js","sourcesContent":["function e(e){this.message=e}e.prototype=new Error,e.prototype.name=\"InvalidCharacterError\";var r=\"undefined\"!=typeof window&&window.atob&&window.atob.bind(window)||function(r){var t=String(r).replace(/=+$/,\"\");if(t.length%4==1)throw new e(\"'atob' failed: The string to be decoded is not correctly encoded.\");for(var n,o,a=0,i=0,c=\"\";o=t.charAt(i++);~o&&(n=a%4?64*n+o:o,a++%4)?c+=String.fromCharCode(255&n>>(-2*a&6)):0)o=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\".indexOf(o);return c};function t(e){var t=e.replace(/-/g,\"+\").replace(/_/g,\"/\");switch(t.length%4){case 0:break;case 2:t+=\"==\";break;case 3:t+=\"=\";break;default:throw\"Illegal base64url string!\"}try{return function(e){return decodeURIComponent(r(e).replace(/(.)/g,(function(e,r){var t=r.charCodeAt(0).toString(16).toUpperCase();return t.length<2&&(t=\"0\"+t),\"%\"+t})))}(t)}catch(e){return r(t)}}function n(e){this.message=e}function o(e,r){if(\"string\"!=typeof e)throw new n(\"Invalid token specified\");var o=!0===(r=r||{}).header?0:1;try{return JSON.parse(t(e.split(\".\")[o]))}catch(e){throw new n(\"Invalid token specified: \"+e.message)}}n.prototype=new Error,n.prototype.name=\"InvalidTokenError\";export default o;export{n as InvalidTokenError};\n//# sourceMappingURL=jwt-decode.esm.js.map\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AlertService } from 'src/app/core/services/alert.service';\r\nimport { HttpService } from 'src/app/core/services/http.service';\r\nimport jwtDecode from 'jwt-decode';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss'],\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  saveEmail = localStorage.getItem('saveEmail') === 'true' ? true : false;\r\n  autoLogin = localStorage.getItem('autoLogin') === 'true' ? true : false;\r\n\r\n  user = {\r\n    email: this.saveEmail ? localStorage.getItem('email') || '' : '',\r\n    user_password: '',\r\n  };\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private alert: AlertService,\r\n    private http: HttpService\r\n  ) {\r\n    if (localStorage.getItem('token')) {\r\n      this.router.navigateByUrl('/dashboard');\r\n    }\r\n  }\r\n\r\n  ngOnInit() {}\r\n\r\n  // 로그인\r\n  async login() {\r\n    try {\r\n      const { token } = await this.http.post('/rpc/login', this.user);\r\n      const data = jwtDecode<any>(token);\r\n      localStorage.setItem('token', token);\r\n      localStorage.setItem('companyId', data.company_id);\r\n      localStorage.setItem('email', this.user.email);\r\n      localStorage.setItem('saveEmail', String(this.saveEmail));\r\n      localStorage.setItem('autoLogin', String(this.autoLogin));\r\n      localStorage.setItem('name', data.user_name);\r\n      localStorage.setItem('position', data.user_position);\r\n      localStorage.setItem('user_id', data.user_id);\r\n      // localStorage.setItem('logo', data.company_logo_url);\r\n\r\n      this.router.navigateByUrl('/dashboard');\r\n    } catch (error) {\r\n      this.alert.errormsg(\r\n        '로그인 오류',\r\n        '아이디 또는 비밀번호를\\n확인해 주세요.'\r\n      );\r\n    }\r\n  }\r\n}\r\n","<div class=\"account-pages my-5 pt-sm-5\">\r\n  <div class=\"container\">\r\n    <div class=\"row justify-content-center\">\r\n      <div class=\"col-md-8 col-lg-6 col-xl-5\">\r\n        <div class=\"card overflow-hidden\">\r\n          <div class=\"card-body\">\r\n            <div class=\"logo\">\r\n              <img src=\"assets/imgs/logo.png\" alt=\"\" />\r\n              <p>쉽고 편리한 스마트 공장, 원팩</p>\r\n            </div>\r\n\r\n            <div class=\"input-item mb-16\">\r\n              <input\r\n                type=\"email\"\r\n                id=\"email\"\r\n                placeholder=\"아이디를 입력하세요.\"\r\n                [(ngModel)]=\"user.email\"\r\n                name=\"email\"\r\n              />\r\n            </div>\r\n\r\n            <div class=\"input-item\">\r\n              <input\r\n                type=\"password\"\r\n                [(ngModel)]=\"user.user_password\"\r\n                placeholder=\"비밀번호를 입력해주세요.\"\r\n                (keyup.enter)=\"login()\"\r\n              />\r\n            </div>\r\n\r\n            <div class=\"check-wrap\">\r\n              <div class=\"custom-control custom-checkbox\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  class=\"custom-control-input\"\r\n                  id=\"all\"\r\n                  [(ngModel)]=\"saveEmail\"\r\n                />\r\n                <label class=\"custom-control-label\" for=\"all\"\r\n                  >ID 저장하기</label\r\n                >\r\n              </div>\r\n\r\n              <div class=\"custom-control custom-checkbox\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  class=\"custom-control-input\"\r\n                  id=\"login\"\r\n                  [(ngModel)]=\"autoLogin\"\r\n                />\r\n                <label class=\"custom-control-label\" for=\"login\"\r\n                  >자동 로그인하기</label\r\n                >\r\n              </div>\r\n            </div>\r\n\r\n            <button\r\n              class=\"login-btn\"\r\n              [disabled]=\"!user.email || !user.user_password\"\r\n              (click)=\"login()\"\r\n            >\r\n              로그인\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { AccountRoutingModule } from './account-routing.module';\r\n\r\nimport { LoginComponent } from './login/login.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NgbAlertModule } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@NgModule({\r\n  declarations: [LoginComponent],\r\n  imports: [CommonModule, AccountRoutingModule, ReactiveFormsModule, NgbAlertModule, FormsModule],\r\n})\r\nexport class AccountModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LoginComponent } from './login/login.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'login',\r\n    component: LoginComponent,\r\n  },\r\n  { path: '**', redirectTo: 'login' },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AccountRoutingModule {}\r\n"],"sourceRoot":"webpack:///"}